{"version":3,"sources":["components/Navbar.tsx","components/Dashboard.tsx","components/Home.tsx","context/ThemeContext.tsx","components/ThemingDesigner/AccessibilityDetailsList.tsx","components/ThemingDesigner/MainPanelStyles.tsx","components/ThemingDesigner/Typography.tsx","components/ThemingDesigner/AccessibilityChecker.tsx","components/ThemingDesigner/Samples.tsx","components/ThemingDesigner/ThemeDesignerColorPicker.tsx","components/ThemingDesigner/index.tsx","hooks/generate-theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["navStyles","root","minHeight","borderRight","navLinkGroups","name","links","key","url","Navbar","Nav","styles","ariaLabel","groups","stackTokens","childrenGap","theme","getTheme","palette","fonts","people","profileImageSrc","TestImages","personaFemale","initials","personaMale","previewPropsUsingIcon","previewImages","previewIconProps","iconName","fontSize","superLarge","color","white","width","previewIcon","backgroundColor","themePrimary","previewProps","getOverflowDocumentCountText","overflowCount","linkProps","href","target","previewImageSrc","documentPreview","iconSrc","iconPpt","documentPreviewTwo","documentPreviewThree","previewOutlookUsingIcon","neutralLighterAlt","stackItemStyle","margin","border","padding","Dashboard","className","Stack","Item","SearchBox","placeholder","onSearch","newValue","console","log","horizontal","Persona","presence","PersonaPresence","online","size","PersonaSize","size72","imageInitials","text","secondaryText","showSecondaryText","tokens","Text","variant","DocumentCard","type","DocumentCardType","compact","onClickHref","DocumentCardPreview","DocumentCardDetails","DocumentCardTitle","title","shouldTruncate","DocumentCardActivity","activity","Home","history","useHistory","verticalAlign","PrimaryButton","onClick","push","ThemeContext","createContext","AccessibilityDetailsList","props","columns","messageBar","allContrastRatioPairs","nonAccessiblePairs","concat","accessiblePairs","nonAccessibleStartIndex","length","items","newTheme","accessiblePairsListCount","errorsMessageBarString","toString","MessageBar","messageBarType","MessageBarType","error","isMultiline","success","i","contrastRatio","contrastRatioValue","slotPair","contrastRatioPair","colorPair","startIndex","count","fieldName","minWidth","maxWidth","isResizable","DetailsList","ariaLabelForSelectAllCheckbox","ariaLabelForSelectionColumn","selectionMode","SelectionMode","none","disableSelectionZone","onRenderRow","detailsRowProps","DetailsRow","selectors","background","groupProps","showEmptyGroups","MainPanelWidth","MainPanelInnerContent","mergeStyles","marginRight","marginLeft","titleTextStyles","p","display","fontWeight","neutralPrimary","marginBottom","TitleText","AccessibilityChecker","calculateContrastRatio","foreground","colorPairString","themeRules","bgc","FabricSlots","fgc","currContrastRatio","getContrastRatio","contrastRatioString","toFixed","currContrastRatioPair","neutralSecondary","sampleColumn","iconButtonStyles","commandBarItems","cacheKey","iconProps","subMenuProps","commandBarFarItems","iconOnly","Samples","state","learnMoreLinkDisabled","selectOneDropdownDisabled","textFieldDisabled","checkboxOneDisabled","checkboxTwoDisabled","checkboxThreeDisabled","choicegroupDisabled","sliderDisabled","likeIconButtonDisabled","bookmarkIconButtonDisabled","sunnyIconButtonDisabled","primaryButtonDisabled","defaultButtonDisabled","_onToggleChange","bind","style","this","gap","CommandBar","farItems","grow","textColor","Link","disabled","Icon","Dropdown","selectedKey","label","options","TextField","Checkbox","defaultChecked","ChoiceGroup","defaultSelectedKey","Slider","max","Toggle","onText","offText","inlineLabel","onChange","Pivot","PivotItem","headerText","IconButton","DefaultButton","setState","React","colorLabelClassName","colorBoxClassName","height","position","left","top","flexShrink","textBoxClassName","colorPanelClassName","ThemeDesignerColorPicker","_colorPickerRef","isColorPickerVisible","_updateColorPickerVisible","_onTextFieldValueChange","_onCalloutDismiss","_onColorPickerChange","editingColorStr","str","horizontalAlign","ref","id","value","Callout","gapSpace","current","setInitialFocus","onDismiss","ColorPicker","alphaSliderHidden","ev","newColor","getColorFromString","onColorChange","undefined","initializeIcons","Page","overflow","Content","Sidebar","disableShrink","paddingRight","Main","GlobalChanger","primaryColor","setPrimaryTheme","useContext","ThemingDesigner","_colorChangeTimeout","_async","_onPrimaryColorPickerChange","_onColorChange","BaseSlots","_onTextColorPickerChange","foregroundColor","_onBkgColorPickerChange","_makeNewTheme","themeAsJson","ThemeGenerator","getThemeAsJson","finalTheme","createTheme","isInverted","isDark","colorToChange","baseSlot","clearTimeout","setTimeout","currentIsDark","setSlot","insureSlots","_buildInitialState","themeRulesStandardCreator","colors","Async","dispose","checked","hex","ThemeProvider","Component","generateTheme","pColor","tColor","bColor","App","useState","setTheme","primaryTheme","useEffect","Provider","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79231443.chunk.js","sourcesContent":["import { INavLinkGroup, INavStyles, Nav } from \"@fluentui/react/lib/Nav\";\nimport * as React from \"react\";\n\nconst navStyles: Partial<INavStyles> = {\n  root: { minHeight: \"90vh\", borderRight: \"1px solid #80808050\" },\n};\n\nconst navLinkGroups: INavLinkGroup[] = [\n  {\n    name: \"System\",\n    links: [\n      {\n        key: \"Display\",\n        name: \"Display\",\n        url: \"\",\n      },\n      {\n        key: \"Sound\",\n        name: \"Sound\",\n        url: \"\",\n      },\n      {\n        key: \"Notification Access\",\n        name: \"Notification Access\",\n        url: \"\",\n      },\n    ],\n  },\n  {\n    name: \"Network and Internet\",\n    links: [\n      {\n        key: \"Status\",\n        name: \"Status\",\n        url: \"\",\n      },\n      {\n        key: \"Ethernet\",\n        name: \"Ethernet\",\n        url: \"\",\n      },\n      {\n        key: \"Dial-up\",\n        name: \"Dial-up\",\n        url: \"\",\n      },\n    ],\n  },\n];\n\nexport const Navbar: React.FunctionComponent = () => {\n  return (\n    <Nav\n      styles={navStyles}\n      ariaLabel=\"Nav example similar to one found in this demo page\"\n      groups={navLinkGroups}\n    />\n  );\n};\n","import { TestImages } from \"@fluentui/example-data\";\nimport {\n  DocumentCard,\n  DocumentCardActivity,\n  DocumentCardDetails,\n  DocumentCardPreview,\n  DocumentCardTitle,\n  DocumentCardType,\n  IPersonaSharedProps,\n  IStackItemStyles,\n  Persona,\n  PersonaPresence,\n  PersonaSize,\n  SearchBox,\n  Stack,\n  Text,\n} from \"@fluentui/react\";\nimport {\n  IDocumentCardActivityPerson,\n  IDocumentCardPreviewProps,\n} from \"@fluentui/react/lib/DocumentCard\";\nimport { IStackTokens } from \"@fluentui/react/lib/Stack\";\nimport { getTheme } from \"@fluentui/react/lib/Styling\";\nimport React from \"react\";\nimport { Navbar } from \"./Navbar\";\n\nconst stackTokens: IStackTokens = { childrenGap: 20 };\nconst theme = getTheme();\nconst { palette, fonts } = theme;\n\nconst people: IDocumentCardActivityPerson[] = [\n  { name: \"Annie Lindqvist\", profileImageSrc: TestImages.personaFemale },\n  { name: \"Roko Kolar\", profileImageSrc: \"\", initials: \"RK\" },\n  { name: \"Aaron Reid\", profileImageSrc: TestImages.personaMale },\n  { name: \"Christian Bergqvist\", profileImageSrc: \"\", initials: \"CB\" },\n];\n\nconst previewPropsUsingIcon: IDocumentCardPreviewProps = {\n  previewImages: [\n    {\n      previewIconProps: {\n        iconName: \"OpenFile\",\n        styles: {\n          root: { fontSize: fonts.superLarge.fontSize, color: palette.white },\n        },\n      },\n      width: 144,\n    },\n  ],\n  styles: { previewIcon: { backgroundColor: palette.themePrimary } },\n};\n\nconst previewProps: IDocumentCardPreviewProps = {\n  getOverflowDocumentCountText: (overflowCount: number) =>\n    `+${overflowCount} more`,\n  previewImages: [\n    {\n      name: \"Revenue stream proposal fiscal year 2016 version02.pptx\",\n      linkProps: {\n        href: \"http://bing.com\",\n        target: \"_blank\",\n      },\n      previewImageSrc: TestImages.documentPreview,\n      iconSrc: TestImages.iconPpt,\n      width: 144,\n    },\n    {\n      name: \"New Contoso Collaboration for Conference Presentation Draft\",\n      linkProps: {\n        href: \"http://bing.com\",\n        target: \"_blank\",\n      },\n      previewImageSrc: TestImages.documentPreviewTwo,\n      iconSrc: TestImages.iconPpt,\n      width: 144,\n    },\n    {\n      name: \"Spec Sheet for design\",\n      linkProps: {\n        href: \"http://bing.com\",\n        target: \"_blank\",\n      },\n      previewImageSrc: TestImages.documentPreviewThree,\n      iconSrc: TestImages.iconPpt,\n      width: 144,\n    },\n    {\n      name: \"Contoso Marketing Presentation\",\n      linkProps: {\n        href: \"http://bing.com\",\n        target: \"_blank\",\n      },\n      previewImageSrc: TestImages.documentPreview,\n      iconSrc: TestImages.iconPpt,\n      width: 144,\n    },\n  ],\n};\n\nconst previewOutlookUsingIcon: IDocumentCardPreviewProps = {\n  previewImages: [\n    {\n      previewIconProps: {\n        iconName: \"OutlookLogo\",\n        styles: {\n          root: {\n            fontSize: fonts.superLarge.fontSize,\n            color: \"#0078d7\",\n            backgroundColor: palette.neutralLighterAlt,\n          },\n        },\n      },\n      width: 144,\n    },\n  ],\n  styles: {\n    previewIcon: { backgroundColor: palette.neutralLighterAlt },\n  },\n};\n\nconst stackItemStyle: IStackItemStyles = {\n  root: {\n    margin: 20,\n    border: \"2px solid #80808050\",\n    padding: 20,\n  },\n};\n\nconst Dashboard = () => {\n  const examplePersona: IPersonaSharedProps = {\n    imageInitials: \"AJ\",\n    text: \"Aravind Jaimon\",\n    secondaryText: \"Software Engineer\",\n    showSecondaryText: true,\n  };\n\n  return (\n    <div className=\"flex\">\n      <div className=\"fixed z-40 inset-0 flex-none h-full  bg-opacity-25 w-full  lg:static lg:h-auto lg:overflow-y-visible lg:pt-0 lg:w-60 xl:w-72 lg:block hidden\">\n        <Navbar />\n      </div>\n      <div className=\"min-w-0 w-full flex-auto lg:static lg:max-h-full lg:overflow-visible\">\n        <Stack styles={{ root: { margin: 40 } }}>\n          <Stack.Item styles={{ root: { padding: 20 } }}>\n            <SearchBox\n              placeholder=\"Search\"\n              onSearch={(newValue) => console.log(\"value is \" + newValue)}\n            />\n          </Stack.Item>\n          <Stack.Item styles={stackItemStyle}>\n            <Stack horizontal>\n              <Persona\n                presence={PersonaPresence.online}\n                size={PersonaSize.size72}\n                {...examplePersona}\n              />\n            </Stack>\n          </Stack.Item>\n          <Stack.Item styles={stackItemStyle}>\n            <Stack tokens={stackTokens}>\n              <Stack.Item>\n                <Text variant=\"xxLargePlus\" className=\"py-10\">\n                  Your notifications\n                </Text>\n              </Stack.Item>\n              <Stack.Item>\n                <DocumentCard\n                  aria-label=\"Document Card with document preview. Revenue stream proposal fiscal year 2016 version 2.\n      Created by Roko Kolar a few minutes ago\"\n                  type={DocumentCardType.compact}\n                  onClickHref=\"http://bing.com\"\n                >\n                  <DocumentCardPreview\n                    previewImages={[previewProps.previewImages[0]]}\n                  />\n                  <DocumentCardDetails>\n                    <DocumentCardTitle\n                      title=\"Revenue stream proposal fiscal year 2016 version02.pptx\"\n                      shouldTruncate\n                    />\n                    <DocumentCardActivity\n                      activity=\"Created a few minutes ago\"\n                      people={[people[1]]}\n                    />\n                  </DocumentCardDetails>\n                </DocumentCard>\n                <DocumentCard\n                  aria-label={\n                    \"Document Card with folder or site activity. 4 files were uploaded. \" +\n                    \"Created by Annie Lindqvist a few minutes ago\"\n                  }\n                  type={DocumentCardType.compact}\n                  onClickHref=\"http://bing.com\"\n                >\n                  <DocumentCardPreview {...previewProps} />\n                  <DocumentCardDetails>\n                    <DocumentCardTitle\n                      title=\"4 files were uploaded\"\n                      shouldTruncate\n                    />\n                    <DocumentCardActivity\n                      activity=\"Created a few minutes ago\"\n                      people={[people[0]]}\n                    />\n                  </DocumentCardDetails>\n                </DocumentCard>\n                <DocumentCard\n                  aria-label=\"Document Card with icon. View and share files. Created by Aaron Reid a few minutes ago\"\n                  type={DocumentCardType.compact}\n                  onClickHref=\"http://bing.com\"\n                >\n                  <DocumentCardPreview {...previewPropsUsingIcon} />\n                  <DocumentCardDetails>\n                    <DocumentCardTitle\n                      title=\"View and share files\"\n                      shouldTruncate\n                    />\n                    <DocumentCardActivity\n                      activity=\"Created a few minutes ago\"\n                      people={[people[2]]}\n                    />\n                  </DocumentCardDetails>\n                </DocumentCard>\n                <DocumentCard\n                  aria-label={\n                    \"Document Card with email conversation. Conversation about takeaways from annual SharePoint conference. \" +\n                    \"Sent by Christian Bergqvist a few minutes ago\"\n                  }\n                  type={DocumentCardType.compact}\n                  onClickHref=\"http://bing.com\"\n                >\n                  <DocumentCardPreview {...previewOutlookUsingIcon} />\n                  <DocumentCardDetails>\n                    <DocumentCardTitle\n                      title=\"Conversation about takeaways from annual SharePoint conference\"\n                      shouldTruncate\n                    />\n                    <DocumentCardActivity\n                      activity=\"Sent a few minutes ago\"\n                      people={[people[3]]}\n                    />\n                  </DocumentCardDetails>\n                </DocumentCard>\n              </Stack.Item>\n            </Stack>\n          </Stack.Item>\n        </Stack>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import {\n  IStackItemStyles,\n  IStackStyles,\n  PrimaryButton,\n  Stack,\n} from \"@fluentui/react\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = () => {\n  const stackStyle: IStackStyles = {\n    root: { margin: \"0 10px 10px 10px\", padding: 10 },\n  };\n  const stackItemStyle: IStackItemStyles = { root: { margin: \"0 10px\" } };\n\n  const history = useHistory();\n\n  return (\n    <div>\n      <Stack horizontal verticalAlign=\"center\" styles={stackStyle}>\n        <Stack.Item styles={stackItemStyle}>\n          <PrimaryButton\n            onClick={() => {\n              history.push(\"/designer\");\n            }}\n            text=\"Theme Designer\"\n          />\n        </Stack.Item>\n        <Stack.Item styles={stackItemStyle}>\n          <PrimaryButton\n            onClick={() => {\n              history.push(\"/dashboard\");\n            }}\n            text=\"Dashboard\"\n          />\n        </Stack.Item>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Home;\n","import { createContext, Dispatch, SetStateAction, useContext } from \"react\";\ninterface IThemeContextValue {\n  primaryTheme: IPrimaryTheme;\n  setPrimaryTheme: Dispatch<SetStateAction<IPrimaryTheme>>;\n}\n\nexport interface IPrimaryTheme {\n  primaryColor: string;\n  textColor: string;\n  backgroundColor: string;\n}\n\nexport const ThemeContext = createContext<IThemeContextValue>(\n  {} as IThemeContextValue\n);\n\nexport const useTheme = () => useContext(ThemeContext);\n","import {\n  DetailsList,\n  DetailsRow,\n  IColumn,\n  IDetailsRowProps,\n  IDetailsRowStyles,\n  IGroup,\n  SelectionMode,\n} from \"@fluentui/react/lib/DetailsList\";\nimport { MessageBar, MessageBarType } from \"@fluentui/react/lib/MessageBar\";\nimport { ITheme } from \"@fluentui/react/lib/Styling\";\nimport * as React from \"react\";\nimport { IContrastRatioPair } from \"./AccessibilityChecker\";\n\nexport interface IAccessibilityDetailsListProps {\n  accessiblePairs: IContrastRatioPair[];\n  nonAccessiblePairs: IContrastRatioPair[];\n  theme: ITheme | undefined;\n}\n\ninterface IAccessibilityDetailsList {\n  key: string;\n  contrastRatio: String;\n  slotPair: String;\n  colorPair: String;\n}\n\nexport const AccessibilityDetailsList: React.FunctionComponent<IAccessibilityDetailsListProps> =\n  (props: IAccessibilityDetailsListProps) => {\n    let allContrastRatioPairs = props.nonAccessiblePairs.concat(\n      props.accessiblePairs\n    );\n    let nonAccessibleStartIndex = props.nonAccessiblePairs.length;\n\n    let items: IAccessibilityDetailsList[] = [];\n    let groups: IGroup[] = [];\n    let columns: IColumn[] = [];\n    const newTheme = props.theme;\n\n    const onRenderRow = (\n      detailsRowProps: IDetailsRowProps | undefined\n    ): JSX.Element => {\n      // Set each row's background and text color to what's specified by its respective slot rule\n      if (detailsRowProps && newTheme) {\n        const rowStyles: Partial<IDetailsRowStyles> = {\n          root: {\n            selectors: {\n              \":hover\": {\n                background: \"transparent\",\n              },\n            },\n          },\n        };\n        return <DetailsRow {...detailsRowProps!} styles={rowStyles} />;\n      } else {\n        return <div />;\n      }\n    };\n\n    const accessiblePairsListCount =\n      allContrastRatioPairs.length - nonAccessibleStartIndex;\n    let messageBar;\n    if (allContrastRatioPairs.length > 0 && nonAccessibleStartIndex > 0) {\n      const errorsMessageBarString =\n        \"Your color palette has \" +\n        nonAccessibleStartIndex.toString() +\n        \" accessibility errors. Each pair of colors below should produce legible text and have a minimum contrast of 4.5\";\n      messageBar = (\n        <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\n          {errorsMessageBarString}\n        </MessageBar>\n      );\n    } else {\n      messageBar = (\n        <MessageBar messageBarType={MessageBarType.success} isMultiline={false}>\n          Looking good! Your color palette doesn't have any accessibility\n          issues.\n        </MessageBar>\n      );\n    }\n\n    for (let i = 0; i < allContrastRatioPairs.length; i++) {\n      items.push({\n        key: i.toString(),\n        contrastRatio: allContrastRatioPairs[i].contrastRatioValue,\n        slotPair: allContrastRatioPairs[i].contrastRatioPair,\n        colorPair: allContrastRatioPairs[i].colorPair,\n      });\n    }\n\n    groups = [\n      {\n        key: \"nonaccessiblepairs\",\n        name: \"Non accessible pairs\",\n        startIndex: 0,\n        count: nonAccessibleStartIndex,\n      },\n      {\n        key: \"accessiblepairs\",\n        name: \"Accessible pairs\",\n        startIndex: nonAccessibleStartIndex,\n        count: accessiblePairsListCount,\n      },\n    ];\n\n    columns = [\n      {\n        key: \"contrastRatio\",\n        name: \"Contrast ratio: AA\",\n        fieldName: \"contrastRatio\",\n        minWidth: 100,\n        maxWidth: 200,\n        isResizable: true,\n      },\n      {\n        key: \"colorPair\",\n        name: \"Color pair\",\n        fieldName: \"colorPair\",\n        minWidth: 100,\n        maxWidth: 300,\n      },\n      {\n        key: \"slotPair\",\n        name: \"Slot pair\",\n        fieldName: \"slotPair\",\n        minWidth: 100,\n        maxWidth: 200,\n      },\n    ];\n\n    return (\n      <div>\n        {messageBar}\n        <DetailsList\n          items={items}\n          groups={groups}\n          columns={columns}\n          ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n          ariaLabelForSelectionColumn=\"Toggle selection\"\n          selectionMode={SelectionMode.none}\n          disableSelectionZone={true}\n          // eslint-disable-next-line react/jsx-no-bind\n          onRenderRow={onRenderRow}\n          groupProps={{\n            showEmptyGroups: true,\n          }}\n        />\n      </div>\n    );\n  };\n","import { mergeStyles } from \"@fluentui/merge-styles\";\n\nexport const MainPanelNumericalWidth = 1100;\nexport const MainPanelWidth = `${MainPanelNumericalWidth}px`;\nexport const MainPanelInnerContent = mergeStyles({\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n  padding: \"32px\",\n  width: MainPanelWidth,\n});\n","import { ITextProps, Text } from \"@fluentui/react\";\nimport * as React from \"react\";\n\nconst titleTextStyles: ITextProps[\"styles\"] = (p, theme) => ({\n  root: {\n    display: \"block\",\n    fontWeight: 600,\n    color: theme.palette.neutralPrimary,\n    fontSize: 20,\n    marginBottom: 20,\n  },\n});\n\nexport const TitleText = (p: ITextProps) => (\n  <Text styles={titleTextStyles} {...p} />\n);\n","import { FabricSlots, IThemeRules } from \"@fluentui/react\";\nimport { getContrastRatio, IColor } from \"@fluentui/react/lib/Color\";\nimport { ITheme } from \"@fluentui/react/lib/Styling\";\nimport * as React from \"react\";\nimport { AccessibilityDetailsList } from \"./AccessibilityDetailsList\";\nimport { MainPanelInnerContent } from \"./MainPanelStyles\";\nimport { TitleText } from \"./Typography\";\n\nexport interface IAccessibilityCheckerProps {\n  theme?: ITheme;\n  themeRules?: IThemeRules;\n}\n\nexport interface IContrastRatioPair {\n  contrastRatioValue: string;\n  contrastRatioPair: string;\n  colorPair: string;\n}\n\nexport const AccessibilityChecker: React.FunctionComponent<IAccessibilityCheckerProps> =\n  (props: IAccessibilityCheckerProps) => {\n    let nonAccessiblePairs: IContrastRatioPair[] = [];\n    let accessiblePairs: IContrastRatioPair[] = [];\n\n    const calculateContrastRatio = (\n      foreground: FabricSlots,\n      background: FabricSlots,\n      colorPairString: string\n    ) => {\n      if (props.themeRules) {\n        const bgc: IColor = props.themeRules[FabricSlots[background]].color!;\n        const fgc: IColor = props.themeRules[FabricSlots[foreground]].color!;\n\n        const currContrastRatio = getContrastRatio(bgc, fgc);\n        const contrastRatioString = currContrastRatio.toFixed(2);\n\n        const currContrastRatioPair =\n          FabricSlots[foreground] + \" on \" + FabricSlots[background];\n\n        if (currContrastRatio < 4.5) {\n          nonAccessiblePairs.push({\n            contrastRatioValue: contrastRatioString,\n            contrastRatioPair: currContrastRatioPair,\n            colorPair: colorPairString,\n          });\n        } else {\n          accessiblePairs.push({\n            contrastRatioValue: contrastRatioString,\n            contrastRatioPair: currContrastRatioPair,\n            colorPair: colorPairString,\n          });\n        }\n      }\n    };\n\n    const loadAllContrastRatioPairsList = () => {\n      calculateContrastRatio(\n        FabricSlots.themePrimary,\n        FabricSlots.white,\n        \"Primary color on Background color\"\n      );\n      calculateContrastRatio(\n        FabricSlots.neutralPrimary,\n        FabricSlots.white,\n        \"Text color on Background color\"\n      );\n      calculateContrastRatio(\n        FabricSlots.neutralSecondary,\n        FabricSlots.white,\n        \"Secondary text color on Background color\"\n      );\n    };\n\n    loadAllContrastRatioPairsList();\n    return (\n      <div className={MainPanelInnerContent}>\n        <TitleText>Accessibility checker</TitleText>\n        <AccessibilityDetailsList\n          theme={props.theme!}\n          accessiblePairs={accessiblePairs}\n          nonAccessiblePairs={nonAccessiblePairs}\n        />\n      </div>\n    );\n  };\n","import { mergeStyles } from \"@fluentui/merge-styles/lib/mergeStyles\";\nimport {\n  DefaultButton,\n  IconButton,\n  PrimaryButton,\n} from \"@fluentui/react/lib/Button\";\nimport { Checkbox } from \"@fluentui/react/lib/Checkbox\";\nimport { ChoiceGroup } from \"@fluentui/react/lib/ChoiceGroup\";\nimport { CommandBar } from \"@fluentui/react/lib/CommandBar\";\nimport { Dropdown } from \"@fluentui/react/lib/Dropdown\";\nimport { Icon } from \"@fluentui/react/lib/Icon\";\nimport { Link } from \"@fluentui/react/lib/Link\";\nimport { Persona, PersonaPresence } from \"@fluentui/react/lib/Persona\";\nimport { Pivot, PivotItem } from \"@fluentui/react/lib/Pivot\";\nimport { Slider } from \"@fluentui/react/lib/Slider\";\nimport { Stack } from \"@fluentui/react/lib/Stack\";\nimport { Text } from \"@fluentui/react/lib/Text\";\nimport { TextField } from \"@fluentui/react/lib/TextField\";\nimport { Toggle } from \"@fluentui/react/lib/Toggle\";\nimport * as React from \"react\";\nimport {\n  MainPanelInnerContent,\n  MainPanelNumericalWidth,\n} from \"./MainPanelStyles\";\n\n/* eslint-disable no-console */\n\nexport interface ISamplesProps {\n  backgroundColor: string;\n  textColor: string;\n}\n\nexport interface ISamplesState {\n  learnMoreLinkDisabled: boolean;\n  selectOneDropdownDisabled: boolean;\n  textFieldDisabled: boolean;\n  checkboxOneDisabled: boolean;\n  checkboxTwoDisabled: boolean;\n  checkboxThreeDisabled: boolean;\n  choicegroupDisabled: boolean;\n  sliderDisabled: boolean;\n  likeIconButtonDisabled: boolean;\n  bookmarkIconButtonDisabled: boolean;\n  sunnyIconButtonDisabled: boolean;\n  primaryButtonDisabled: boolean;\n  defaultButtonDisabled: boolean;\n}\n\nconst columnSpace = 48;\nconst columns = 3;\nconst sampleColumn = mergeStyles({\n  width: (MainPanelNumericalWidth - columnSpace * (columns - 1)) / columns,\n});\nconst iconButtonStyles = mergeStyles({\n  color: \"#0078D4\",\n});\n\nconst commandBarItems = [\n  {\n    key: \"newItem\",\n    name: \"New\",\n    cacheKey: \"myCacheKey\", // changing this key will invalidate this item's cache\n    iconProps: {\n      iconName: \"Add\",\n    },\n    ariaLabel: \"New\",\n    subMenuProps: {\n      items: [\n        {\n          key: \"emailMessage\",\n          name: \"Email message\",\n          iconProps: {\n            iconName: \"Mail\",\n          },\n        },\n        {\n          key: \"calendarEvent\",\n          name: \"Calendar event\",\n          iconProps: {\n            iconName: \"Calendar\",\n          },\n        },\n      ],\n    },\n  },\n  {\n    key: \"upload\",\n    name: \"Upload\",\n    iconProps: {\n      iconName: \"Upload\",\n    },\n    href: \"https://developer.microsoft.com/en-us/fluentui\",\n  },\n  {\n    key: \"share\",\n    name: \"Share\",\n    iconProps: {\n      iconName: \"Share\",\n    },\n    onClick: () => console.log(\"Share\"),\n  },\n  {\n    key: \"download\",\n    name: \"Download\",\n    iconProps: {\n      iconName: \"Download\",\n    },\n    onClick: () => console.log(\"Download\"),\n  },\n  {\n    key: \"more\",\n    name: \"More\",\n    iconProps: {\n      iconName: \"More\",\n    },\n    onClick: () => console.log(\"More\"),\n  },\n];\n\nconst commandBarFarItems = [\n  {\n    key: \"search\",\n    ariaLabel: \"Search\",\n    iconProps: {\n      iconName: \"Search\",\n    },\n    onClick: () => console.log(\"Search\"),\n  },\n  {\n    key: \"filter\",\n    name: \"Filter\",\n    ariaLabel: \"Filter\",\n    iconProps: {\n      iconName: \"Filter\",\n    },\n    iconOnly: true,\n    onClick: () => console.log(\"Filter\"),\n  },\n  {\n    key: \"list\",\n    name: \"List\",\n    ariaLabel: \"List\",\n    iconProps: {\n      iconName: \"List\",\n    },\n    iconOnly: true,\n    onClick: () => console.log(\"List\"),\n  },\n];\n\nexport class Samples extends React.Component<ISamplesProps, ISamplesState> {\n  constructor(props: ISamplesProps) {\n    super(props);\n    this.state = {\n      learnMoreLinkDisabled: false,\n      selectOneDropdownDisabled: false,\n      textFieldDisabled: false,\n      checkboxOneDisabled: false,\n      checkboxTwoDisabled: false,\n      checkboxThreeDisabled: false,\n      choicegroupDisabled: false,\n      sliderDisabled: false,\n      likeIconButtonDisabled: false,\n      bookmarkIconButtonDisabled: false,\n      sunnyIconButtonDisabled: false,\n      primaryButtonDisabled: false,\n      defaultButtonDisabled: false,\n    };\n    this._onToggleChange = this._onToggleChange.bind(this);\n  }\n  public render() {\n    return (\n      <div style={{ backgroundColor: this.props.backgroundColor }}>\n        <div className={MainPanelInnerContent}>\n          <Stack gap={32}>\n            <CommandBar farItems={commandBarFarItems} items={commandBarItems} />\n            <Stack horizontal gap={columnSpace}>\n              <Stack.Item className={sampleColumn} grow={1}>\n                <Stack gap={32}>\n                  <Stack gap={20}>\n                    <Text\n                      variant=\"small\"\n                      styles={{ root: { color: this.props.textColor } }}\n                    >\n                      STORIES\n                    </Text>\n                    <Text\n                      variant=\"xxLarge\"\n                      styles={{ root: { color: this.props.textColor } }}\n                    >\n                      Make an impression\n                    </Text>\n                    <Text\n                      variant=\"medium\"\n                      styles={{ root: { color: this.props.textColor } }}\n                    >\n                      Make a big impression with this clean, modern, and\n                      mobile-friendly site. Use it to communicate information to\n                      people inside or outisde your team. Share your ideas,\n                      results, and more in this visually compelling format.\n                    </Text>\n                    <Link disabled={this.state.learnMoreLinkDisabled}>\n                      Learn more <Icon iconName=\"ChevronRight\" />\n                    </Link>\n                  </Stack>\n                  <Persona\n                    text=\"Cameron Evans\"\n                    secondaryText=\"Senior Researcher at Contoso\"\n                    presence={PersonaPresence.online}\n                  />\n                </Stack>\n              </Stack.Item>\n              <Stack.Item className={sampleColumn} grow={1}>\n                <Stack gap={32}>\n                  <Dropdown\n                    selectedKey=\"content\"\n                    label=\"Select one\"\n                    options={[\n                      { key: \"content\", text: \"Content\" },\n                      { key: \"morecontent\", text: \"More content\" },\n                    ]}\n                    disabled={this.state.selectOneDropdownDisabled}\n                  />\n                  <TextField\n                    disabled={this.state.textFieldDisabled}\n                    label=\"Enter text here\"\n                    placeholder=\"Placeholder\"\n                  />\n                  <Stack horizontal gap={20}>\n                    <Stack gap={13} grow={1}>\n                      <div />\n                      <Checkbox\n                        disabled={this.state.checkboxOneDisabled}\n                        label=\"Option 1\"\n                      />\n                      <Checkbox\n                        disabled={this.state.checkboxTwoDisabled}\n                        label=\"Option 2\"\n                        defaultChecked\n                      />\n                      <Checkbox\n                        disabled={this.state.checkboxThreeDisabled}\n                        label=\"Option 3\"\n                        defaultChecked\n                      />\n                    </Stack>\n                    <Stack gap={10} grow={1}>\n                      <ChoiceGroup\n                        defaultSelectedKey=\"A\"\n                        options={[\n                          { key: \"A\", text: \"Option 1\" },\n                          { key: \"B\", text: \"Option 2\" },\n                          { key: \"C\", text: \"Option 3\" },\n                        ]}\n                        disabled={this.state.choicegroupDisabled}\n                      />\n                    </Stack>\n                  </Stack>\n                </Stack>\n              </Stack.Item>\n              <Stack.Item className={sampleColumn} grow={1}>\n                <Stack gap={32}>\n                  <Slider disabled={this.state.sliderDisabled} max={11} />\n                  <Toggle\n                    onText=\"On\"\n                    offText=\"Off\"\n                    inlineLabel\n                    label=\"Toggle for disabled states\"\n                    onChange={this._onToggleChange}\n                  />\n                  <Pivot>\n                    <PivotItem headerText=\"Home\" />\n                    <PivotItem headerText=\"Pages\" />\n                    <PivotItem headerText=\"Documents\" />\n                    <PivotItem headerText=\"Activity\" />\n                  </Pivot>\n                  <Stack horizontal gap={15}>\n                    <IconButton\n                      disabled={this.state.likeIconButtonDisabled}\n                      iconProps={{ iconName: \"Like\" }}\n                      className={iconButtonStyles}\n                    />\n                    <IconButton\n                      disabled={this.state.bookmarkIconButtonDisabled}\n                      iconProps={{ iconName: \"SingleBookmark\" }}\n                      className={iconButtonStyles}\n                    />\n                    <IconButton\n                      disabled={this.state.sunnyIconButtonDisabled}\n                      iconProps={{ iconName: \"Sunny\" }}\n                      className={iconButtonStyles}\n                    />\n                  </Stack>\n                  <Stack horizontal gap={10}>\n                    <PrimaryButton\n                      disabled={this.state.primaryButtonDisabled}\n                      text=\"Primary button\"\n                    />\n                    <DefaultButton\n                      disabled={this.state.defaultButtonDisabled}\n                      text=\"Default button\"\n                    />\n                  </Stack>\n                </Stack>\n              </Stack.Item>\n            </Stack>\n          </Stack>\n        </div>\n      </div>\n    );\n  }\n\n  private _onToggleChange() {\n    this.setState({\n      learnMoreLinkDisabled: !this.state.learnMoreLinkDisabled,\n      selectOneDropdownDisabled: !this.state.selectOneDropdownDisabled,\n      textFieldDisabled: !this.state.textFieldDisabled,\n      checkboxOneDisabled: !this.state.checkboxOneDisabled,\n      checkboxTwoDisabled: !this.state.checkboxTwoDisabled,\n      checkboxThreeDisabled: !this.state.checkboxThreeDisabled,\n      sliderDisabled: !this.state.sliderDisabled,\n      likeIconButtonDisabled: !this.state.likeIconButtonDisabled,\n      bookmarkIconButtonDisabled: !this.state.bookmarkIconButtonDisabled,\n      sunnyIconButtonDisabled: !this.state.sunnyIconButtonDisabled,\n      primaryButtonDisabled: !this.state.primaryButtonDisabled,\n      defaultButtonDisabled: !this.state.defaultButtonDisabled,\n    });\n  }\n}\n","import { mergeStyles } from \"@fluentui/merge-styles\";\nimport { Callout } from \"@fluentui/react/lib/Callout\";\nimport { getColorFromString, IColor } from \"@fluentui/react/lib/Color\";\nimport { ColorPicker } from \"@fluentui/react/lib/ColorPicker\";\nimport { Stack } from \"@fluentui/react/lib/Stack\";\nimport { Text } from \"@fluentui/react/lib/Text\";\nimport { TextField } from \"@fluentui/react/lib/TextField\";\nimport * as React from \"react\";\n\nconst colorLabelClassName = mergeStyles({\n  fontSize: 16,\n  fontWeight: 800,\n  marginLeft: 20,\n});\n\nconst colorBoxClassName = mergeStyles({\n  width: 20,\n  height: 20,\n  display: \"inline-block\",\n  position: \"absolute\",\n  left: 5,\n  top: 5,\n  border: \"1px solid black\",\n  flexShrink: 0,\n});\n\nconst textBoxClassName = mergeStyles({\n  width: 100,\n});\n\nconst colorPanelClassName = mergeStyles({\n  position:\n    \"relative\" /* This is necessary to make position: absolute; work in the other style. */,\n});\n\nexport interface IThemeDesignerColorPickerProps {\n  color: IColor;\n  onColorChange: (color: IColor | undefined) => void;\n  label: string;\n}\n\nexport interface IThemeDesignerColorPickerState {\n  isColorPickerVisible: boolean;\n  editingColorStr?: string;\n}\n\nexport class ThemeDesignerColorPicker extends React.Component<\n  IThemeDesignerColorPickerProps,\n  IThemeDesignerColorPickerState\n> {\n  private _colorPickerRef = React.createRef<HTMLDivElement>();\n  constructor(props: IThemeDesignerColorPickerProps) {\n    super(props);\n    this.state = {\n      isColorPickerVisible: false,\n    };\n\n    this._updateColorPickerVisible = this._updateColorPickerVisible.bind(this);\n    this._onTextFieldValueChange = this._onTextFieldValueChange.bind(this);\n    this._onCalloutDismiss = this._onCalloutDismiss.bind(this);\n    this._onColorPickerChange = this._onColorPickerChange.bind(this);\n  }\n\n  public render() {\n    const { editingColorStr = this.props.color.str } = this.state;\n    return (\n      <div>\n        <Stack horizontal horizontalAlign={\"space-between\"} gap={20}>\n          <Text className={colorLabelClassName}>{this.props.label}</Text>\n          <Stack horizontal className={colorPanelClassName} gap={35}>\n            <div\n              ref={this._colorPickerRef}\n              id=\"colorbox\"\n              className={colorBoxClassName}\n              style={{ backgroundColor: this.props.color.str }}\n              onClick={this._updateColorPickerVisible}\n            />\n            <TextField\n              id=\"textfield\"\n              className={textBoxClassName}\n              value={editingColorStr}\n              onChange={this._onTextFieldValueChange}\n            />\n          </Stack>\n        </Stack>\n        {this.state.isColorPickerVisible && (\n          <Callout\n            gapSpace={10}\n            target={this._colorPickerRef.current}\n            setInitialFocus={true}\n            onDismiss={this._onCalloutDismiss}\n          >\n            <ColorPicker\n              color={this.props.color}\n              onChange={this._onColorPickerChange}\n              alphaSliderHidden={true}\n            />\n          </Callout>\n        )}\n      </div>\n    );\n  }\n\n  private _updateColorPickerVisible() {\n    this.setState({ isColorPickerVisible: true });\n  }\n\n  private _onTextFieldValueChange(ev: any, newValue: string | undefined) {\n    const newColor = getColorFromString(newValue!);\n    if (newColor) {\n      this.props.onColorChange(newColor);\n      this.setState({ editingColorStr: undefined });\n    } else {\n      this.setState({ editingColorStr: newValue });\n    }\n  }\n\n  private _onCalloutDismiss() {\n    this.setState({ isColorPickerVisible: false });\n  }\n\n  private _onColorPickerChange(ev: any, color: IColor) {\n    this.props.onColorChange(color);\n  }\n}\n","import {\n  Async,\n  BaseSlots,\n  createTheme,\n  getColorFromString,\n  IColor,\n  IconButton,\n  isDark,\n  IStackProps,\n  ITheme,\n  IThemeRules,\n  mergeStyles,\n  PrimaryButton,\n  Stack,\n  Text,\n  ThemeGenerator,\n  ThemeProvider,\n  themeRulesStandardCreator,\n} from \"@fluentui/react\";\nimport { initializeIcons } from \"@fluentui/react/lib/Icons\";\nimport React from \"react\";\nimport { IPrimaryTheme, useTheme } from \"../../context/ThemeContext\";\nimport { AccessibilityChecker } from \"./AccessibilityChecker\";\nimport { MainPanelWidth } from \"./MainPanelStyles\";\nimport { Samples } from \"./Samples\";\nimport { ThemeDesignerColorPicker } from \"./ThemeDesignerColorPicker\";\n\ninitializeIcons();\n\nexport interface IThemingDesignerState {\n  primaryColor: IColor;\n  textColor: IColor;\n  backgroundColor: IColor;\n  theme?: ITheme;\n  themeRules?: IThemeRules;\n}\n\nconst Page = (props: IStackProps) => (\n  <Stack\n    gap={10}\n    className={mergeStyles({\n      height: \"100vh\",\n      overflow: \"hidden\",\n      selectors: {\n        \":global(body)\": {\n          padding: 0,\n          margin: 0,\n        },\n      },\n    })}\n    {...props}\n  />\n);\n\nconst Content = (props: IStackProps) => (\n  <Stack\n    horizontal\n    gap={10}\n    className={mergeStyles({ overflow: \"hidden\" })}\n    {...props}\n  />\n);\n\nconst Sidebar = (props: IStackProps) => (\n  <Stack\n    disableShrink\n    gap={20}\n    grow={0}\n    className={mergeStyles({\n      borderRight: \"1px solid #ddd\",\n      paddingRight: \"1rem\",\n    })}\n    {...props}\n  />\n);\n\nconst Main = (props: IStackProps) => (\n  <Stack\n    grow={1}\n    disableShrink\n    className={mergeStyles({\n      minWidth: MainPanelWidth,\n      overflow: \"scroll\",\n    })}\n    {...props}\n  />\n);\n\nconst GlobalChanger = ({\n  primaryColor,\n  textColor,\n  backgroundColor,\n}: IPrimaryTheme) => {\n  const { setPrimaryTheme } = useTheme();\n  const applyChange = () =>\n    setPrimaryTheme({\n      primaryColor: `#${primaryColor}`,\n      textColor: `#${textColor}`,\n      backgroundColor: `#${backgroundColor}`,\n    });\n  return <PrimaryButton text=\"Apply Change Globaly\" onClick={applyChange} />;\n};\n\nexport class ThemingDesigner extends React.Component<\n  {},\n  IThemingDesignerState\n> {\n  private _colorChangeTimeout: number = 0;\n  private _async: Async;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._async = new Async(this);\n\n    this.state = this._buildInitialState();\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n  }\n\n  public render() {\n    return (\n      <Page>\n        <Content>\n          <Sidebar>\n            <Text\n              variant={\"xLarge\"}\n              styles={{ root: { fontWeight: 600, marginLeft: 20 } }}\n            >\n              <IconButton\n                disabled={false}\n                checked={false}\n                iconProps={{\n                  iconName: \"Color\",\n                  styles: { root: { fontSize: \"20px\", marginRight: 12 } },\n                }}\n                title=\"Colors\"\n                ariaLabel=\"Colors\"\n              />\n              Color\n            </Text>\n            {/* the three base slots, prominently displayed at the top of the page */}\n            <ThemeDesignerColorPicker\n              color={this.state.primaryColor}\n              onColorChange={this._onPrimaryColorPickerChange}\n              label={\"Primary color\"}\n            />\n            <ThemeDesignerColorPicker\n              color={this.state.textColor}\n              onColorChange={this._onTextColorPickerChange}\n              label={\"Text color\"}\n            />\n            <ThemeDesignerColorPicker\n              color={this.state.backgroundColor}\n              onColorChange={this._onBkgColorPickerChange}\n              label={\"Background color\"}\n            />\n            <Stack>\n              <Stack.Item>\n                <GlobalChanger\n                  backgroundColor={this.state.backgroundColor.hex}\n                  primaryColor={this.state.primaryColor.hex}\n                  textColor={this.state.textColor.hex}\n                />\n              </Stack.Item>\n            </Stack>\n          </Sidebar>\n          <Main>\n            <ThemeProvider theme={this.state.theme}>\n              <Samples\n                backgroundColor={this.state.backgroundColor.str}\n                textColor={this.state.textColor.str}\n              />\n            </ThemeProvider>\n            <AccessibilityChecker\n              theme={this.state.theme}\n              themeRules={this.state.themeRules}\n            />\n          </Main>\n        </Content>\n      </Page>\n    );\n  }\n\n  private _onPrimaryColorPickerChange = (newColor: IColor | undefined) => {\n    this._onColorChange(\n      this.state.primaryColor,\n      BaseSlots.primaryColor,\n      newColor\n    );\n  };\n\n  private _onTextColorPickerChange = (newColor: IColor | undefined) => {\n    this._onColorChange(\n      this.state.textColor,\n      BaseSlots.foregroundColor,\n      newColor\n    );\n  };\n\n  private _onBkgColorPickerChange = (newColor: IColor | undefined) => {\n    this._onColorChange(\n      this.state.backgroundColor,\n      BaseSlots.backgroundColor,\n      newColor\n    );\n  };\n\n  private _makeNewTheme = (): void => {\n    if (this.state.themeRules) {\n      const themeAsJson: {\n        [key: string]: string;\n      } = ThemeGenerator.getThemeAsJson(this.state.themeRules);\n\n      const finalTheme = createTheme({\n        ...{ palette: themeAsJson },\n        isInverted: isDark(\n          this.state.themeRules[BaseSlots[BaseSlots.backgroundColor]].color!\n        ),\n      });\n      this.setState({ theme: finalTheme });\n    }\n  };\n\n  private _onColorChange = (\n    colorToChange: IColor,\n    baseSlot: BaseSlots,\n    newColor: IColor | undefined\n  ) => {\n    if (this._colorChangeTimeout) {\n      this._async.clearTimeout(this._colorChangeTimeout);\n    }\n    if (newColor) {\n      if (colorToChange === this.state.primaryColor) {\n        this.setState({ primaryColor: newColor });\n      } else if (colorToChange === this.state.textColor) {\n        this.setState({ textColor: newColor });\n      } else if (colorToChange === this.state.backgroundColor) {\n        this.setState({ backgroundColor: newColor });\n      } else {\n        return;\n      }\n      this._colorChangeTimeout = this._async.setTimeout(() => {\n        const themeRules = this.state.themeRules;\n        if (themeRules) {\n          const currentIsDark = isDark(\n            themeRules[BaseSlots[BaseSlots.backgroundColor]].color!\n          );\n          ThemeGenerator.setSlot(\n            themeRules[BaseSlots[baseSlot]],\n            newColor,\n            currentIsDark,\n            true,\n            true\n          );\n          if (\n            currentIsDark !==\n            isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)\n          ) {\n            // isInverted got swapped, so need to refresh slots with new shading rules\n            ThemeGenerator.insureSlots(themeRules, currentIsDark);\n          }\n        }\n        this.setState({ themeRules: themeRules }, this._makeNewTheme);\n      }, 20);\n      // 20ms is low enough that you can slowly drag to change color and see that theme,\n      // but high enough that quick changes don't get bogged down by a million changes inbetween\n    }\n  };\n\n  private _buildInitialState = (): IThemingDesignerState => {\n    const themeRules = themeRulesStandardCreator();\n    const colors = {\n      primaryColor: getColorFromString(\"#0078d4\")!,\n      textColor: getColorFromString(\"#323130\")!,\n      backgroundColor: getColorFromString(\"#ffffff\")!,\n    };\n    ThemeGenerator.insureSlots(\n      themeRules,\n      isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)\n    );\n    ThemeGenerator.setSlot(\n      themeRules[BaseSlots[BaseSlots.primaryColor]],\n      colors.primaryColor,\n      undefined,\n      false,\n      false\n    );\n    ThemeGenerator.setSlot(\n      themeRules[BaseSlots[BaseSlots.foregroundColor]],\n      colors.textColor,\n      undefined,\n      false,\n      false\n    );\n    ThemeGenerator.setSlot(\n      themeRules[BaseSlots[BaseSlots.backgroundColor]],\n      colors.backgroundColor,\n      undefined,\n      false,\n      false\n    );\n\n    const themeAsJson: {\n      [key: string]: string;\n    } = ThemeGenerator.getThemeAsJson(themeRules);\n\n    const finalTheme = createTheme({\n      ...{ palette: themeAsJson },\n      isInverted: isDark(\n        themeRules[BaseSlots[BaseSlots.backgroundColor]].color!\n      ),\n    });\n\n    const state = {\n      ...colors,\n      theme: finalTheme,\n      themeRules: themeRules,\n    };\n\n    return state;\n  };\n}\n","import {\n  BaseSlots,\n  createTheme,\n  getColorFromString,\n  isDark,\n  Theme,\n  ThemeGenerator,\n  themeRulesStandardCreator,\n} from \"@fluentui/react\";\n\nconst generateTheme = (\n  primaryColor?: string,\n  textColor?: string,\n  backgroundColor?: string\n): Theme => {\n  const themeRules = themeRulesStandardCreator();\n  const colors = {\n    pColor: getColorFromString(primaryColor || \"#0078d4\")!,\n    tColor: getColorFromString(textColor || \"#323130\")!,\n    bColor: getColorFromString(backgroundColor || \"#ffffff\")!,\n  };\n\n  const currentIsDark = isDark(\n    themeRules[BaseSlots[BaseSlots.backgroundColor]].color!\n  );\n\n  ThemeGenerator.insureSlots(themeRules, currentIsDark);\n\n  ThemeGenerator.setSlot(\n    themeRules[BaseSlots[BaseSlots.primaryColor]],\n    colors.pColor,\n    currentIsDark,\n    true,\n    true\n  );\n  ThemeGenerator.setSlot(\n    themeRules[BaseSlots[BaseSlots.foregroundColor]],\n    colors.tColor,\n    currentIsDark,\n    true,\n    true\n  );\n  ThemeGenerator.setSlot(\n    themeRules[BaseSlots[BaseSlots.backgroundColor]],\n    colors.bColor,\n    currentIsDark,\n    true,\n    true\n  );\n\n  const themeAsJson: {\n    [key: string]: string;\n  } = ThemeGenerator.getThemeAsJson(themeRules);\n\n  const finalTheme = createTheme({\n    ...{ palette: themeAsJson },\n    isInverted: currentIsDark,\n  });\n\n  return finalTheme;\n};\n\nexport default generateTheme;\n","import { Theme, ThemeProvider } from \"@fluentui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Home from \"./components/Home\";\nimport { ThemingDesigner } from \"./components/ThemingDesigner\";\nimport { IPrimaryTheme, ThemeContext } from \"./context/ThemeContext\";\nimport generateTheme from \"./hooks/generate-theme\";\n\nfunction App() {\n  const [theme, setTheme] = useState<Theme>();\n  const [primaryTheme, setPrimaryTheme] = useState<IPrimaryTheme>({\n    primaryColor: \"#0078d4\",\n    textColor: \"#323130\",\n    backgroundColor: \"#ffffff\",\n  });\n  const value = { primaryTheme, setPrimaryTheme };\n\n  useEffect(() => {\n    setTheme(\n      generateTheme(\n        primaryTheme.primaryColor,\n        primaryTheme.textColor,\n        primaryTheme.backgroundColor\n      )\n    );\n  }, [primaryTheme]);\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Home />\n            <Switch>\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/designer\" component={ThemingDesigner} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}